@model KAF.BusinessDataObjects.hr_svcinfoEntity

<style>
    .form-horizontal .form-group {
        margin-right: 10px;
        margin-left: 10px;
    }
</style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmHr_SvcInfoEdit", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()

    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            Service Information: @KAF.MsgContainer._hr_svcinfo.svcinfoUpdate
        </div>

        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.hrsvcid)
                        @Html.HiddenFor(m => m.strModelPrimaryKey)
                        @Html.HiddenFor(m => m.hrbasicid)
                        @Html.HiddenFor(m => m.passportno)
                        @Html.HiddenFor(m => m.status)

                    </div>
                    <div class="row">
                        <div class="col-md-12 text-center">
                            <div class="form-group">
                                <div class="row">
                                    <button id="btnAttachment" title="Change Profile Image" class="btn btn-primary start btnAttachment" style="background-color: white; width: 200px;height: 150px;" type="button">
                                        <img id="imgprofile" src="@ViewBag.UserProfilePhoto" style="height:100%;" />
                                    </button>
                                    <br />
                                </div>
                                @*<div class="row">
                                        <button type="submit" id="btnRemoveImage" class="btn btn-primary btn-xs btnRemoveImage ">Remove <i class="fa fa-trash-o"></i></button>
                                    </div>*@
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Military No (KW)", htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.militarynokw, new { htmlAttributes = new { @readonly = "readonly", @class = "militarynokw form-control" } })
                                @Html.ValidationMessageFor(model => model.militarynokw, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Military No (BD)", htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.militarynobd, new { htmlAttributes = new { @readonly = "readonly", @class = "militarynobd form-control" } })
                                @Html.ValidationMessageFor(model => model.militarynobd, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.civilid, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.civilid, new { htmlAttributes = new { @readonly = "readonly", @class = "civilid form-control" } })
                                @Html.ValidationMessageFor(model => model.civilid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.passportno, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.passportno, new { htmlAttributes = new { @readonly = "readonly", @class = "passportno form-control" } })
                                @Html.ValidationMessageFor(model => model.passportno, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.name1, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.name1, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.name1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.name2, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.name2, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.name2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        @*<div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.name3, htmlAttributes: new { @class = "labelNormal  " })
                                    @Html.EditorFor(model => model.name3, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                    @Html.ValidationMessageFor(model => model.name3, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control required fullname" } })
                                @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.dateofbirth, htmlAttributes: new { @class = "labelNormal   " })
                                <div class='input-group date dateonly' id='' style="width: 100%; ">
                                    @Html.EditorFor(model => model.dateofbirth, new { htmlAttributes = new { @Value = Model.dateofbirth != null ? Convert.ToDateTime(Model.dateofbirth).ToString("dd-MM-yyyy") : null, @readonly = "readonly", @class = "form-control", @type = "text" } })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.dateofbirth, "", new { @class = "text-danger " })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Rank (KW)", htmlAttributes: new { @class = "labelNormal     " })
                                @{Html.RenderAction("LoadRankKWSearch", "Common", new { area = "", selectid = "rankidkw", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preloadedGen_RankKW, multiple = false, isReadOnly = true, IsRequired = true });}

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Rank (BD)", htmlAttributes: new { @class = "labelNormal     " })
                                @{Html.RenderAction("LoadRankBDSearch", "Common", new { area = "", selectid = "rankidbd", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preloadedGen_RankBD, multiple = false, isReadOnly = true, IsRequired = true });}

                            </div>
                        </div>
                    </div>

                    <div class="row ">

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Trade (KW)", htmlAttributes: new { @class = "labelNormal     " })
                                @{Html.RenderAction("LoadTradeKWSearch", "Common", new { area = "", selectid = "tradeidkw", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preloadedGen_TradeKW, multiple = false, isReadOnly = true, IsRequired = true });}
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Trade (BD)", htmlAttributes: new { @class = "labelNormal     " })
                                @{Html.RenderAction("LoadTradeBDSearch", "Common", new { area = "", selectid = "tradeidbd", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preloadedGen_TradeBD, multiple = false, isReadOnly = true, IsRequired = true });}
                            </div>
                        </div>
                    </div>

                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Unit Name", htmlAttributes: new { @class = "labelNormal     " })
                                @{Html.RenderAction("LoadUnitSearch", "Common", new { area = "", selectid = "entitykey", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preloadedStp_OrganizationEntity, multiple = false, isReadOnly = true, IsRequired = true });}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("OKP", htmlAttributes: new { @class = "labelNormal   required  " })
                                @{Html.RenderAction("LoadComboBox", "DataCache", new { EntityName = KAF.CustomHelper.HelperClasses.clsDataCache.gen_okpEntity[0].ToString(), selectid = "okpid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preloadedGen_Okp, multiple = false, isReadOnly = true, IsRequired = true });}

                            </div>
                        </div>
                    </div>
                    <div class="row ">

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Group", htmlAttributes: new { @class = "labelNormal     " })
                                @Html.DropDownListFor(model => model.groupid,
                                new SelectList(
                                    (
                                    KAF.CustomHelper.HelperClasses.clsUtil.ToSelectList<KAF.ConstantTypes.clsSystemConstantTypes.Group>(typeof(KAF.ConstantTypes.clsSystemConstantTypes.Group))), "paramvalue", "paramname"),
                                "Please Select",
                                new { @readonly = "readonly", @disabled = "disabled", @class = "form-control" })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Status", htmlAttributes: new { @class = "labelNormal   required " })
                                @Html.DropDownListFor(m => m.status,
                                new SelectList(
                                    (
                                    KAF.CustomHelper.HelperClasses.clsUtil.ToSelectList<KAF.ConstantTypes.clsSystemConstantTypes.ServiceStatus>(typeof(KAF.ConstantTypes.clsSystemConstantTypes.ServiceStatus))), "paramvalue", "paramname"),
                                "Please Select",
                                new { @disabled = "disabled", @class = "form-control" })

                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.subunitid, htmlAttributes: new { @class = "labelNormal   required " })
                                @*@{Html.RenderAction("LoadSubUnitSearch", "Common", new { area = "", selectid = "fromsubunitid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preGen_SubUnit, multiple = false, isReadOnly = false, IsRequired = true });}*@
                                @{Html.RenderAction("LoadComboBoxWithCascadeOption", "DataCache", new { EntityName = KAF.CustomHelper.HelperClasses.clsDataCache.gen_subunitEntity[0].ToString(), selectid = "subunitid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preGen_SubUnit, multiple = false, isReadOnly = false, IsRequired = true, isStatic = true, cascadewith = Model.okpid.ToString() });}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.campid, htmlAttributes: new { @class = "labelNormal   required " })
                                @* @{Html.RenderAction("LoadCampSearch", "Common", new { area = "", selectid = "fromcampid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preGen_Camp, multiple = false, isReadOnly = false, IsRequired = true });}*@
                                @{Html.RenderAction("LoadComboBoxWithCascadeOption", "DataCache", new { EntityName = KAF.CustomHelper.HelperClasses.clsDataCache.gen_campEntity[0].ToString(), selectid = "campid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preGen_Camp, multiple = false, isReadOnly = false, IsRequired = true, isStatic = true, cascadewith = Model.okpid.ToString() });}
                            </div>
                        </div>
                    </div>
                    <div class="btn-toolbar">
                        <button type="submit" id="btnUpdateHrSvcInfotmp" class="btn btn-primary btn-md btnUpdateHrSvcInfotmp"><i class="fa fa-edit"> </i> @KAF.MsgContainer._Common._btnUpdate</button>
                        <button type="submit" id="btnModalCloseEdit" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="file" id="attachment" name="attachment" style="display:none" />

}


<script>
    //filecontrol addons

    $j('.dateonly').datetimepicker(
        {
            // format: 'L'
            format: 'DD-MM-YYYY'
        });

    $(document).ready(function () {

        $("#strstatus").val($("#status").val());

        $('#btnUpdateHrSvcInfotmp').click(function (event) {
            try {
                event.preventDefault();

                var form = $('#frmHr_SvcInfoEdit');
                jQuery.validator.unobtrusive.parse();
                jQuery.validator.unobtrusive.parse(form);

                //Validation :: End

                if (form.valid()) {


                    var input = AddAntiForgeryToken({
                        token: $(".txtUserSTK").val(),
                        userinfo: $(".txtServerUtilObj").val(),
                        useripaddress: $(".txtuserip").val(),
                        sessionid: $(".txtUserSes").val(),
                        methodname: "HrFamilyInfoCreate",
                        currenturl: window.location.href,

                        hrsvcid: $('#hrsvcid').val(),
                        hrbasicid: $('#hrbasicid').val(),

                        subunitid: $('#subunitid').val(),
                        campid: $('#campid').val()


                    });


                    confirmationDialog(_getCookieForLanguage("_confirmationTitle"), _getCookieForLanguage("_saveConfirmation"), _getCookieForLanguage("_btnYes"), _getCookieForLanguage("_btnNo")).then(function (answer) {
                        if (answer == "true") {

                            $.ajax({
                                url: baseurl + "HrSvcInfo/HrSvcInfoUpdateTemp",
                                data: input,
                                type: 'POST',
                                success: function (data) {
                                    if (data.status === "success") {
                                        inforamtionDialog(data.title, data.responsetext, _getCookieForLanguage("_btnOK")).then(function (answer) {
                                            if (answer == "true") {
                                                window.location.href = baseurl + "HrSvcInfo/HrSvcInfo";
                                                $('#mcHrSvcInfoEdit').html('');
                                                $('#modal-container-HrSvcInfoEdit').modal('hide');
                                                //GetAllDataHrSvcInfo();
                                            }

                                        });

                                    }

                                    else {
                                        return;
                                    }
                                }
                            });
                        }
                    });
                }
                else {
                    return;
                }

            } catch (e) {
                $.alert({
                    title: _getCookieForLanguage("_informationTitle"),
                    content: e.message,
                    type: 'red'
                });
            }
        });

    });


</script>






