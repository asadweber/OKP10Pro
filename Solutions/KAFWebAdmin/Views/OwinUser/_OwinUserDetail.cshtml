@model KAF.BusinessDataObjects.owin_userEntity

<style>
        .form-horizontal .form-group {
            margin-right: 10px;
            margin-left: 10px;
        }
    </style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmOwin_UserDetail", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()
    
    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            @KAF.MsgContainer._owin_user.owin_userDetails
        </div>
        
        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.userid)
                        @Html.HiddenFor(m => m.strModelPrimaryKey)
                    </div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.applicationid, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.applicationid, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.applicationid, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.masteruserid, htmlAttributes: new { @class = "labelNormal required " })
							 @Html.EditorFor(model => model.masteruserid, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.masteruserid, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.username, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.emailaddress, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.emailaddress, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.emailaddress, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.loweredusername, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.loweredusername, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.loweredusername, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.mobilenumber, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.mobilenumber, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.mobilenumber, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.userprofilephoto, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.userprofilephoto, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.userprofilephoto, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.isanonymous, htmlAttributes: new { @class = "labelNormal required " })
							 @Html.EditorFor(model => model.isanonymous, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.isanonymous, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.ischildenable, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.ischildenable, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.ischildenable, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.masprivatekey, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.masprivatekey, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.masprivatekey, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.maspublickey, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.maspublickey, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.maspublickey, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.password, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.passwordsalt, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.passwordsalt, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.passwordsalt, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.passwordkey, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.passwordkey, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.passwordkey, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.passwordvector, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.passwordvector, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.passwordvector, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.mobilepin, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.mobilepin, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.mobilepin, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.passwordquestion, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.passwordquestion, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.passwordquestion, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.passwordanswer, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.passwordanswer, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.passwordanswer, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.approved, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.approved, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.approved, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.locked, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.locked, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.locked, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.lastlogindate, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.lastlogindate, new {  htmlAttributes = new {  @readonly = "readonly",  @Value = Model.lastlogindate != null ? Convert.ToDateTime(Model.lastlogindate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.lastlogindate, "", new { @class = "text-danger " })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.lastpasschangeddate, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.lastpasschangeddate, new {  htmlAttributes = new {  @readonly = "readonly",  @Value = Model.lastpasschangeddate != null ? Convert.ToDateTime(Model.lastpasschangeddate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.lastpasschangeddate, "", new { @class = "text-danger " })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.lastlockoutdate, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.lastlockoutdate, new {  htmlAttributes = new {  @readonly = "readonly",  @Value = Model.lastlockoutdate != null ? Convert.ToDateTime(Model.lastlockoutdate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.lastlockoutdate, "", new { @class = "text-danger " })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.failedpasswordattemptcount, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.failedpasswordattemptcount, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.failedpasswordattemptcount, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.comment, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.comment, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.lastactivitydate, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.lastactivitydate, new {  htmlAttributes = new {  @readonly = "readonly",  @Value = Model.lastactivitydate != null ? Convert.ToDateTime(Model.lastactivitydate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.lastactivitydate, "", new { @class = "text-danger " })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.isapproved, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.isapproved, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.isapproved, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.approvedby, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.approvedby, new { htmlAttributes = new {  @readonly = "readonly",  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.approvedby, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.approvedbyusername, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.approvedbyusername, new { htmlAttributes = new {   @readonly = "readonly",  @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.approvedbyusername, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.approveddate, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.approveddate, new {  htmlAttributes = new {  @readonly = "readonly",  @Value = Model.approveddate != null ? Convert.ToDateTime(Model.approveddate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.approveddate, "", new { @class = "text-danger " })
							</div>
						</div>
					</div>
                    <div class="btn-toolbar">
                        <button type="submit" id="btnModalCloseDetail" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div> 
                </div>
            </div>
        </div>
    </div>
}
<script>
//filecontrol addons




</script>
    



