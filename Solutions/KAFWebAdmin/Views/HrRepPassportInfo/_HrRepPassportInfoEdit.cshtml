@model KAF.BusinessDataObjects.hr_reppassportinfoEntity

<style>
    .form-horizontal .form-group {
        margin-right: 10px;
        margin-left: 10px;
    }

    .form-control {
        height: 31px;
    }

    .input-group-addon {
        padding: 3px 12px;
    }

    .panel {
        margin-bottom: 5px;
    }

    .panel-body {
        padding: 7px;
    }
</style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmHr_RepPassportInfoEdit", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()

    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            Replacement Passport Information: @KAF.MsgContainer._hr_reppassportinfo.reppassportinfoUpdate
            <div class="col-lg-3" style="float:right;text-align:right;">
                <button type="button" id="btnModalCloseEdit" class="close btnModalCloseEdit" aria-label="Close"
                        style="opacity:1.0;opacity: 1.0; margin-top: -11px; color: white;  margin-right: -20px;  font-size: 39px;">
                    <span aria-hidden="true" class=" btnModalCloseEdit">&times;</span>
                </button>
            </div>
        </div>

        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.reppassportid)
                        @Html.HiddenFor(m => m.replacementid)
                        @Html.HiddenFor(m => m.strModelPrimaryKey)
                    </div>

                    <br />
                    <div class="panel panel-primary list-panel" id="dvrecinfo">
                        <div class="panel-body">
                            <div class="row ">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.passportrecvdate, htmlAttributes: new { @class = "labelNormal  required " })
                                        <div class='input-group date dateonly' id='' style="width: 100%; ">
                                            @Html.EditorFor(model => model.passportrecvdate, new { htmlAttributes = new { @Value = Model.passportrecvdate != null ? Convert.ToDateTime(Model.passportrecvdate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.passportrecvdate, "", new { @class = "text-danger " })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.passportletterdate, htmlAttributes: new { @class = "labelNormal  required " })
                                        <div class='input-group date dateonly' id='' style="width: 100%; ">
                                            @Html.EditorFor(model => model.passportletterdate, new { htmlAttributes = new { @Value = Model.passportletterdate != null ? Convert.ToDateTime(Model.passportletterdate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.passportletterdate, "", new { @class = "text-danger " })
                                    </div>
                                </div>
                            </div>

                            <div class="row ">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.passportletterno, htmlAttributes: new { @class = "labelNormal required " })
                                        @Html.EditorFor(model => model.passportletterno, new { htmlAttributes = new { @class = " form-control" } })
                                        @Html.ValidationMessageFor(model => model.passportletterno, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 hidden">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "labelNormal  " })
                                        @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = " form-control" } })
                                        @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-12">
                            <table id="GenRepPassportDt" class="table table-striped table-bordered dataTable no-footer dtr-inline" style="width:100%;" role="grid" aria-describedby="GenRepPassportDt_info">
                                <thead>
                                    <tr role="row">
                                        <th rowspan="1" colspan="1" style='width:50px'>SL</th>
                                        <th rowspan="1" colspan="1" style='width:460px'>Mil No/Rank/Name/Appt/OKP</th>
                                        <th rowspan="1" colspan="1">Passport No</th>
                                        <th rowspan="1" colspan="1">First Name</th>
                                        <th rowspan="1" colspan="1">Sur Name</th>
                                        <th rowspan="1" colspan="1">Birth Date</th>
                                        <th rowspan="1" colspan="1">Father's Name</th>
                                        <th>Status</th>
                                        <th rowspan="1" colspan="1"></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>

                    <br />
                    <div class="btn-toolbar">
                        <button type="submit" id="btnUpdateHrRepPassportInfo" class="btn btn-primary btn-md btnUpdateHrRepPassportInfo"><i class="fa fa-edit"> </i> @KAF.MsgContainer._Common._btnUpdate</button>
                        <button type="submit" id="btnModalCloseEdit" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
//filecontrol addons
    $(document).ready(function () {
       // getReplacementListByRepPassportID($("#reppassportid").val());
        $('.dateonly input').attr('placeholder', 'DD-MM-YYYY');
        $j('.dateonly').datetimepicker(
            {
                // format: 'L'
                format: 'DD-MM-YYYY'
            });
        getReplacementList(5);

    });



    function checkduplicatepassportno(curr_index,passportnumber) {
        var ret = 0;
        $("#GenRepPassportDt .txtPassportNo").each(function (index, element ) {

            //console.log(index + '-' + $(element).parent().parent().index());

            if (curr_index != index && $(element).val().toLowerCase() == passportnumber.toLowerCase()) {
                ret = 1;
                return false;
            }

        });

        return ret;
    }

    function getReplacementList(type) {
        try {
            AddAntiForgeryToken = function (data) {
                data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
                return data;
            };
            var input = AddAntiForgeryToken({
                token: $(".txtUserSTK").val(),
                userinfo: $(".txtServerUtilObj").val(),
                useripaddress: $(".txtuserip").val(),
                sessionid: $(".txtUserSes").val(),
                methodname: "HrReplacementInfoNew",
                currenturl: window.location.href,
                ReplacementID: $("#replacementid").val(),
                RepPassportID: $("#reppassportid").val(),
                IsAll: type
            });

            $.ajax({
                url: $("#txtBaseUrl").val() + "Common/GetReplacementListByReplacementID",
                type: 'POST',
                data: input,
                success: function (response) {
                    $("#GenRepPassportDt").find("tr:gt(0)").remove();
                    if (response.status = "success" && response.totalrows > 0) {
                        var letterstat = 0;
                        var rowindex = 0;
                        $(response.data).each(function (index) {
                            if ((typeof $(response.data[index].LetterStatus).attr("leterstatusid") != 'undefined')
                                && (parseInt($(response.data[index].LetterStatus).attr("leterstatusid")) > letterstat))                     
                            letterstat = $(response.data[index].LetterStatus).attr("leterstatusid");

                            rowindex++;
                            var isdisabled = $(response.data[index].LetterStatus).attr("leterstatusid") > 2 ?"disabled='disabled'":"";
                            var ischcked = response.data[index].RepPassportDetlID != null ? "checked='checked' disabled='disabled'" : "";
                            var strpassport = response.data[index].RepPassportDetlID != null ? "value='" + response.data[index].newPassportno+"'" : "";
                            var strname1 = response.data[index].RepPassportDetlID != null ? "value='" + response.data[index].newName1 + "'" : "";
                            var strname2 = response.data[index].RepPassportDetlID != null ? "value='" + response.data[index].newName2 + "'" : "";
                            var strdisabled = parseInt( $(response.data[index].LetterStatus).attr("leterstatusid") )> 2 ? "disabled='disabled'" : "";
                            var strfathername = response.data[index].RepPassportDetlID != null ? "value='" + (response.data[index].ex_nvarchar1 == null ? "" : response.data[index].ex_nvarchar1) + "'" : "";
                            var strbdate1 = response.data[index].RepPassportDetlID != null ? "value='" + datetoStr(response.data[index].ex_date1) + "'" : "";

                            $('#GenRepPassportDt tr:last').after("<tr role='row'>" +
                                "<td>" + rowindex + " </td>" +
                                "<td style='width:460px'>" + response.data[index].milnokw + "/" + response.data[index].KuwaitiRank + "/" + response.data[index].fullname + "/" + response.data[index].KuwaitiTrade + "/" + response.data[index].OkpName +
                                " <input class='hidden txtdetailinfo' value='" + response.data[index].milnokw + "' replacementdetlid='" + response.data[index].ReplacementDetlID + "' detailid='" + response.data[index].RepPassportDetlID + "'  type='text' class='form-control txtMilNo'  hrbasicid='" + response.data[index].HRBasicID + "' hrsvcid='" + response.data[index].HrSvcID + "'  newhrbasicid='" + response.data[index].NewHrBasicID + "' newhrsvcid='" + response.data[index].NewHrSvcID + "'></td>" +
                                "<td class='tdPassportNo'><input  type='text' " + isdisabled+ strpassport + " class='form-control txtPassportNo txtedit' ></td>" +
                                "<td class='tdFirstName'><input " + isdisabled+strname1 + "  type='text' class='form-control txtFirstName txtedit' ></td>" +
                                "<td class='tdSurName'><input  type='text' " + isdisabled+ strname2 + " class='form-control txtSurName txtedit' ></td>" +
                                "<td class='tdBDate'> <div class='input-group date dateonly' id='' style='width: 100%; '>" +
                                "<input  type='text' " + strbdate1 + isdisabled+ "  style='width:100px;' class='form-control txtBDate' >" +
                                " <span class='input-group-addon'>" +
                                "         <span class='glyphicon glyphicon-calendar'></span>" +
                                "    </span>" +
                                "</div></td>" +
                                "<td class='tdFatherName'><input  type='text' " + strfathername + isdisabled+ " class='form-control txtFatherName' ></td>" +

                                "<td class='lblletterstat'>" + response.data[index].LetterStatus + "</td>" +
                                "<td class='tdSelect'><input  type='checkbox' class='chkSelect'   " + ischcked +  + strdisabled+"' ></td>" +
                                "</tr>");
                        });

                        if (letterstat > 2) {
                            $('#passportrecvdate').attr('disabled', 'disabled');
                            $('#passportletterdate').attr('disabled', 'disabled');
                            $('#passportletterno').attr('disabled', 'disabled');
                        }
                        else {
                            $('#passportrecvdate').removeAttr('disabled', 'disabled');
                            $('#passportletterdate').removeAttr('disabled', 'disabled');
                            $('#passportletterno').removeAttr('disabled', 'disabled');
                        }
                        
                        $j('.dateonly').datetimepicker(
                            {
                                // format: 'L'
                                format: 'DD-MM-YYYY'
                            });

                        $(".txtPassportNo").change(function () {
                            if ($(this).val().length > 0) {
                                $(this).parent().parent().find(".chkSelect").prop("checked", true);

                                if (checkduplicatepassportno($(this).parent().parent().index() - 1, $(this).val()) == 1) {
                                    $(this).val('');
                                    inforamtionDialog("Alert", "Duplicate Passport Number", _getCookieForLanguage("_btnOK")).then(function (answer) {
                                        if (answer == "true") {
                                            $(this).focus();
                                        }

                                    });
                                }
                                else
                                checkexists('', this);
                            }
                            else
                                $(this).parent().parent().find(".chkSelect").prop("checked", false);
                        });

                    }

                }
            });

        } catch (e) {
            $.alert({
                title: _getCookieForLanguage("_informationTitle"),
                content: e.message,
                type: 'red'
            });
        }
    }
    var webapiurl = '@System.Configuration.ConfigurationManager.AppSettings["webapi"]';
    var headerauth = $("#txtwebapitoken").val();
    function checkexists(civilid, cntrl) {
        console.log($(cntrl).val());
        $.ajax({
            url: webapiurl + "api/HrMilitaryProfile/GetMilitaryInfoData?civilid=" + civilid + "&passportno=" + $(cntrl).val(),
            headers: {
                "Authorization": headerauth,
                "Content-Type": "application/json",
            },
            type: 'GET',
            dataType: 'json',
            success: function (data) {

                inforamtionDialog("Alert", "Passport No already exists", _getCookieForLanguage("_btnOK")).then(function (answer) {
                    if (answer == "true") {
                        setTimeout(function () { $(cntrl).focus(); }, 300);
                        $(cntrl).val('');
                        $(cntrl).parent().parent().find(".chkSelect").prop("checked", false);
                    }

                });


            },
            error: function (xhr, status, error) {
            }
        });


    }

</script>






