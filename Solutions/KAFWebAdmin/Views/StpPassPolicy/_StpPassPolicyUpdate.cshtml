

@model KAF.BusinessDataObjects.stp_passpolicyEntity

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmUpdateStpPassPolicy", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()

            <div class="panel panel-primary list-panel" id="list-panel">
                <div class="panel-heading list-panel-heading">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    @KAF.MsgContainer._stp_passpolicy.passpolicyUpdate
                </div>


                <div class="panel-body">

                    <div class="modal-body">
                        <div class="form-horizontal">
                                <div class="row">
                                @Html.HiddenFor(model => model.serialnopolicykey)
                              
                            </div>
                                                 <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.categoryid, htmlAttributes: new { @class = "labelNormal" })
                                                            @{Html.RenderAction("LoadCombo", "Common", new { ddlId = "ddl_categoryid", ddlName = KAF.CustomHelper.HelperClasses.clsDataCache.stp_categoryid, type = typeof(KAF.BusinessDataObjects.stp_categoryidEntity), cssclass = "form-control" });}
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.categoryid,  htmlAttributes: new { @class = "labelNormal  required " })
                                                            @Html.EditorFor(model => model.categoryid, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                 <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.passexpiredays, htmlAttributes: new { @class = "labelNormal" })
                                                            @{Html.RenderAction("LoadCombo", "Common", new { ddlId = "ddl_passexpiredays", ddlName = KAF.CustomHelper.HelperClasses.clsDataCache.stp_passexpiredays, type = typeof(KAF.BusinessDataObjects.stp_passexpiredaysEntity), cssclass = "form-control" });}
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.passexpiredays,  htmlAttributes: new { @class = "labelNormal " })
                                                            @Html.EditorFor(model => model.passexpiredays, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.passexpiredays, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                  <div class="row" id="divpassexpiredaysis">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.passexpiredaysis, htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.passexpiredaysis, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.passexpiredaysis, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                 <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.passmaxlength, htmlAttributes: new { @class = "labelNormal" })
                                                            @{Html.RenderAction("LoadCombo", "Common", new { ddlId = "ddl_passmaxlength", ddlName = KAF.CustomHelper.HelperClasses.clsDataCache.stp_passmaxlength, type = typeof(KAF.BusinessDataObjects.stp_passmaxlengthEntity), cssclass = "form-control" });}
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.passmaxlength,  htmlAttributes: new { @class = "labelNormal " })
                                                            @Html.EditorFor(model => model.passmaxlength, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.passmaxlength, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                 <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.passminlength, htmlAttributes: new { @class = "labelNormal" })
                                                            @{Html.RenderAction("LoadCombo", "Common", new { ddlId = "ddl_passminlength", ddlName = KAF.CustomHelper.HelperClasses.clsDataCache.stp_passminlength, type = typeof(KAF.BusinessDataObjects.stp_passminlengthEntity), cssclass = "form-control" });}
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.passminlength,  htmlAttributes: new { @class = "labelNormal " })
                                                            @Html.EditorFor(model => model.passminlength, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.passminlength, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                  <div class="row" id="divpassmcontainchar">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.passmcontainchar, htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.passmcontainchar, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.passmcontainchar, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                  <div class="row" id="divpassmcontainuchar">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.passmcontainuchar, htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.passmcontainuchar, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.passmcontainuchar, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                  <div class="row" id="divpassmcontainnum">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.passmcontainnum, htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.passmcontainnum, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.passmcontainnum, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                  <div class="row" id="divpassmcontainspchar">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.passmcontainspchar, htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.passmcontainspchar, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.passmcontainspchar, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                  <div class="row" id="divoldpasscom">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.oldpasscom, htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.oldpasscom, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.oldpasscom, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                 <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.newpasscomoldpass, htmlAttributes: new { @class = "labelNormal" })
                                                            @{Html.RenderAction("LoadCombo", "Common", new { ddlId = "ddl_newpasscomoldpass", ddlName = KAF.CustomHelper.HelperClasses.clsDataCache.stp_newpasscomoldpass, type = typeof(KAF.BusinessDataObjects.stp_newpasscomoldpassEntity), cssclass = "form-control" });}
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.newpasscomoldpass,  htmlAttributes: new { @class = "labelNormal " })
                                                            @Html.EditorFor(model => model.newpasscomoldpass, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.newpasscomoldpass, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                     <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.regpasscontainchar,  htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.regpasscontainchar, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.regpasscontainchar, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                     <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.regpasscontainuchar,  htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.regpasscontainuchar, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.regpasscontainuchar, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                     <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.regpasscontainnum,  htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.regpasscontainnum, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.regpasscontainnum, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                     <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Html.LabelFor(model => model.regpasscontainspchar,  htmlAttributes: new { @class = "labelNormal " })
                                                                @Html.EditorFor(model => model.regpasscontainspchar, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.regpasscontainspchar, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.organizationkey,  htmlAttributes: new { @class = "labelNormal  required " })
                                                            @{Html.RenderAction("LoadCombo", "Common", new { ddlId = "ddl_passpolicy", ddlName = KAF.CustomHelper.HelperClasses.clsDataCache.stp_passpolicyEntity, type = typeof(KAF.BusinessDataObjects.stp_passpolicy), selectedvalue = "-99", cssclass = "form-control", enable = true, validatedyn = true });}
                                                        </div>
                                                    </div>
                                                </div>


                         
							<div class="btn-toolbar">                      
								<button type="submit" id="btnStpPassPolicyUpdate" class="btn btn-primary btn-md"><i class="fa fa-save"></i> @KAF.MsgContainer._Common._btnUpdate</button>
								<button type="button" class="btn btn-danger btn-md" data-dismiss="modal"><i class="fa fa-times"> </i> @KAF.MsgContainer._Common._btnCancel</button>
							</div>

                        </div>
                    </div>

                </div>
            </div>

}











	