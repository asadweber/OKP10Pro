@model KAF.BusinessDataObjects.hr_basicprofileEntity

<style>
        .form-horizontal .form-group {
            margin-right: 10px;
            margin-left: 10px;
        }
    </style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmHR_BasicProfileEdit", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()
    
    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            @KAF.MsgContainer._hr_basicprofile.hr_basicprofileUpdate
        </div>
        
        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.hrbasicid)
                        @Html.HiddenFor(m => m.strModelPrimaryKey)
                    </div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.civilid, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.civilid, new { htmlAttributes = new {  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.civilid, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.civilidexpiredate, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.civilidexpiredate, new {  htmlAttributes = new {  @Value = Model.civilidexpiredate != null ? Convert.ToDateTime(Model.civilidexpiredate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.civilidexpiredate, "", new { @class = "text-danger " })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.passportno, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.passportno, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.passportno, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.nationalid, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.nationalid, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.nationalid, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.bdsmartcardid, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.bdsmartcardid, new { htmlAttributes = new {  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.bdsmartcardid, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.name1, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.name1, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.name1, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.name2, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.name2, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.name2, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.name3, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.name3, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.name3, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "labelNormal required " })
								 @Html.EditorFor(model => model.fullname, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.name1ar, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.name1ar, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.name1ar, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.name2ar, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.name2ar, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.name2ar, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.name3ar, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.name3ar, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.name3ar, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.fullnamear, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.fullnamear, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.fullnamear, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.dateofbirth, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.dateofbirth, new {  htmlAttributes = new {  @Value = Model.dateofbirth != null ? Convert.ToDateTime(Model.dateofbirth).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.dateofbirth, "", new { @class = "text-danger " })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.joindatebd, htmlAttributes: new { @class = "labelNormal   " }) 
							 <div class='input-group date dateonly' id='' style="width: 100 %; ">
							 @Html.EditorFor(model => model.joindatebd, new {  htmlAttributes = new {  @Value = Model.joindatebd != null ? Convert.ToDateTime(Model.joindatebd).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
														 </div>
							 @Html.ValidationMessageFor(m => m.joindatebd, "", new { @class = "text-danger " })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.remarks, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.profilephoto, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.profilephoto, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.profilephoto, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.profilephotofilepath, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.profilephotofilepath, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.profilephotofilepath, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.profilephotofilename, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.profilephotofilename, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.profilephotofilename, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.profilephotofiletype, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.profilephotofiletype, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.profilephotofiletype, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
								 @Html.LabelFor(model => model.profilephotofileextension, htmlAttributes: new { @class = "labelNormal  " })
								 @Html.EditorFor(model => model.profilephotofileextension, new { htmlAttributes = new {   @class = " form-control" } })
								 @Html.ValidationMessageFor(model => model.profilephotofileextension, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					 <div class="row ">
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.forreview, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.forreview, new { htmlAttributes = new {  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.forreview, "", new { @class = "text-danger" })
							</div>
						</div>
						 <div class="col-md-6">
							 <div class="form-group">
							 @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "labelNormal  " })
							 @Html.EditorFor(model => model.status, new { htmlAttributes = new {  @class = "form-control" } })
							 @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
                    <div class="btn-toolbar">
                        <button type="submit" id="btnUpdateHRBasicProfile" class="btn btn-primary btn-md btnUpdateHRBasicProfile"><i class="fa fa-edit"> </i> @KAF.MsgContainer._Common._btnUpdate</button>
                        <button type="submit" id="btnModalCloseEdit" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div> 
                </div>
            </div>
        </div>
    </div>
}


<script>
//filecontrol addons




</script>






